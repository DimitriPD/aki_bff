openapi: 3.0.3
info:
  title: AKI! - BFF (Backend For Frontend)
  version: "2.0.0"
  description: |
    Backend-for-Frontend (BFF) for the AKI! system.
    
    **Key Features:**
    - **Data Aggregation:** Combines data from multiple microservices (Personas + Core) in single endpoints
    - **Enriched Responses:** Returns complete data with names, statistics, and calculated metrics
    - **Optimized for Frontend:** Each endpoint designed for specific UI screens
    - **Reduced Latency:** Parallel backend calls minimize frontend round-trips
    
    **Architecture:**
    - Personas Microservice (SQL Server): Students, Teachers, Classes
    - Core Microservice (MongoDB): Events, Attendances, Occurrences
    - Azure Functions: Notifications, Password Recovery
    
    **v2.0.0 Changes:**
    - Endpoints now return aggregated data from multiple sources
    - Statistics calculated on backend
    - IDs enriched with names and related data
    - Optimized for single-call UI loading
    
  contact:
    name: AKI! Infra
    email: infra@aki.example

servers:
  - url: http://localhost:4000/v1
    description: Development Server

security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Authentication and password recovery
  - name: Teachers
    description: Aggregated teacher dashboard and profile (Personas + Core data)
  - name: Students
    description: Aggregated student profile with attendance history (Personas + Core data)
  - name: Classes
    description: Aggregated class details with members, events, and statistics
  - name: Events
    description: Aggregated event details with attendances and statistics
  - name: Attendances
    description: Attendance operations and queries
  - name: Occurrences
    description: Occurrence tracking and notifications
  - name: Scan
    description: QR code scanning for attendance registration

x-tagGroups:
  - name: Main Aggregated Endpoints
    tags:
      - Teachers
      - Students
      - Classes
      - Events
      - Scan
  - name: Other Operations
    tags:
      - Auth
      - Attendances
      - Occurrences

paths:

  # ==================== KEY AGGREGATED ENDPOINTS ====================
  # The following endpoints are the core of this BFF:
  # - GET /teachers/{teacherId}/classes - Complete teacher dashboard
  # - GET /students/{studentId} - Complete student profile
  # - GET /classes/{classId} - Complete class details
  # - GET /events/{eventId} - Complete event with attendances
  # - POST /scan - QR scan with enrichment
  #
  # Each reduces frontend calls from 4-6 to just 1 request.
  # ================================================================

  /auth/login:
    post:
      tags: [Auth]
      summary: Mock teacher login (temporary)
      description: Returns mock teacher profile (no authentication required).
      security: []          # p√∫blico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful (mock)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherProfile'
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/forgot-password:
    post:
      tags: [Auth]
      summary: Request password recovery email (via Azure Function 3)
      description: |
        Teachers request password recovery by email.
        BFF forwards request to Azure Function 3 (/api/email/password-recovery).
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
      responses:
        "200":
          description: Recovery email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: recovery_email_sent
                  sent_at:
                    type: string
                    format: date-time
        "404":
          description: Email not registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Function 3 unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/reset-password:
    post:
      tags: [Auth]
      summary: Reset password using recovery token
      description: Validates recovery token from Function 3 and updates password through the Personas microservice.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [token, new_password]
              properties:
                token:
                  type: string
                new_password:
                  type: string
      responses:
        "200":
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: password_reset_success
        "400":
          description: Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teachers/me:
    get:
      tags: [Teachers]
      summary: Get current teacher profile (mocked)
      responses:
        "200":
          description: Teacher profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherProfile'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /teachers/{teacherId}/classes:
    get:
      tags: [Teachers]
      summary: Get teacher dashboard (AGGREGATED)
      description: |
        **Aggregated endpoint** that combines data from multiple sources:
        - Teacher profile (Personas)
        - Teacher's classes with student counts (Personas)
        - Upcoming events (Core)
        - Recent occurrences (Core)
        - Statistics (calculated): total classes, events, attendances, occurrences
        
        This endpoint reduces frontend calls from 5+ to 1 single request.
      parameters:
        - name: teacherId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Aggregated teacher dashboard data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDashboard'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events:
    post:
      tags: [Events]
      summary: Create new event
      description: Creates an event in Core MS and returns data + QR info.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateRequest'
      responses:
        "201":
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWithQr'
        "400":
          $ref: '#/components/responses/BadRequest'
        "409":
          $ref: '#/components/responses/Conflict'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events/{eventId}:
    get:
      tags: [Events]
      summary: Get event details with attendances (AGGREGATED)
      description: |
        **Aggregated endpoint** that combines data from multiple sources:
        - Event data (Core)
        - Class and teacher names (Personas)
        - Complete list of attendances with student names (Core + Personas)
        - List of absent students (calculated)
        - Statistics: attendance rate, on-time count, absent count
        
        This endpoint reduces frontend calls from 4+ to 1 single request.
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Aggregated event details with attendances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags: [Events]
      summary: Update event data
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventUpdateRequest'
      responses:
        "200":
          description: Event updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        "400":
          $ref: '#/components/responses/BadRequest'
        "409":
          $ref: '#/components/responses/Conflict'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags: [Events]
      summary: Delete event (if not finalized)
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Event deleted
        "409":
          $ref: '#/components/responses/Conflict'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /events/{eventId}/qr:
    get:
      tags: [Events]
      summary: Get QR token and SVG for frontend
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: QR token + image
          content:
            application/json:
              schema:
                type: object
                properties:
                  qr_token:
                    type: string
                  expires_at:
                    type: string
                    format: date-time
                  qr_image_svg:
                    type: string
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /scan:
    post:
      tags: [Scan]
      summary: QR code scan for attendance (AGGREGATED)
      description: |
        **Aggregated endpoint** that handles student attendance registration:
        1. Looks up student in Personas by device_id or CPF
        2. Auto-binds device if needed (best-effort)
        3. Registers attendance in Core with validation
        4. Returns enriched response with student name
        
        This endpoint aggregates Personas + Core data and provides a user-friendly response.
      security: []    # public endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequest'
      responses:
        "201":
          description: Attendance registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "409":
          $ref: '#/components/responses/Conflict'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /students/{studentId}:
    get:
      tags: [Students]
      summary: Get student profile with attendance history (AGGREGATED)
      description: |
        **Aggregated endpoint** that combines data from multiple sources:
        - Student information (Personas)
        - Enrolled classes (Personas)
        - Recent attendance history (Core)
        - Statistics: total classes, attendances, attendance rate
        
        This endpoint reduces frontend calls from 4+ to 1 single request.
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Aggregated student profile with history and statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentProfile'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /attendances:
    get:
      tags: [Attendances]
      summary: Get attendances (by event or student)
      parameters:
        - name: event_id
          in: query
          schema:
            type: string
        - name: student_id
          in: query
            # optional int
          schema:
            type: integer
      responses:
        "200":
          description: Attendance list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedAttendances'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /occurrences:
    get:
      tags: [Occurrences]
      summary: Get occurrences and alerts
      description: Aggregates Core MS (Mongo) and Function 1 (Notification) data.
      parameters:
        - name: class_id
          in: query
          schema:
            type: integer
        - name: teacher_id
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Occurrence list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Occurrence'
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /classes/{classId}:
    get:
      tags: [Classes]
      summary: Get class details with events and statistics (AGGREGATED)
      description: |
        **Aggregated endpoint** that combines data from multiple sources:
        - Class info with all members (Personas)
        - Recent events (Core)
        - Upcoming events (Core)
        - Statistics: total students, teachers, events, average attendance rate
        
        This endpoint reduces frontend calls from 5+ to 1 single request.
      parameters:
        - name: classId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Aggregated class details with members, events, and statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassDetails'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict (e.g., overlapping event)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: string
        trace_id:
          type: string
      required: [code, message]

    Location:
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
      required: [latitude, longitude]

    Student:
      type: object
      properties:
        id:
          type: integer
        cpf:
          type: string
        full_name:
          type: string
      required: [id, full_name]

    ClassWithMembers:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        students:
          type: array
          items:
            $ref: '#/components/schemas/Student'
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/TeacherProfile'
      required: [id, name, students, teachers]

    TeacherProfile:
      type: object
      properties:
        id:
          type: integer
        full_name:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassSummary'

    ClassSummary:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        student_count:
          type: integer

    TeacherDashboard:
      type: object
      description: Aggregated teacher dashboard combining Personas and Core data
      properties:
        teacher:
          type: object
          properties:
            id:
              type: integer
            full_name:
              type: string
            email:
              type: string
        classes:
          type: array
          items:
            $ref: '#/components/schemas/ClassSummary'
        upcoming_events:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              class_id:
                type: integer
              class_name:
                type: string
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              status:
                type: string
              location:
                $ref: '#/components/schemas/Location'
        recent_occurrences:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              class_id:
                type: integer
              student_cpf:
                type: string
              description:
                type: string
              created_at:
                type: string
                format: date-time
        stats:
          type: object
          properties:
            total_classes:
              type: integer
            total_events:
              type: integer
            total_attendances:
              type: integer
            total_occurrences:
              type: integer

    ClassDetails:
      type: object
      description: Aggregated class details combining Personas and Core data
      properties:
        class:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
        students:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              cpf:
                type: string
              full_name:
                type: string
              device_id:
                type: string
                nullable: true
        teachers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              full_name:
                type: string
              email:
                type: string
        recent_events:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              status:
                type: string
        upcoming_events:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              status:
                type: string
        stats:
          type: object
          properties:
            total_students:
              type: integer
            total_teachers:
              type: integer
            total_events:
              type: integer
            average_attendance_rate:
              type: integer
              description: Percentage (0-100)

    EventDetail:
      type: object
      description: Aggregated event details with attendances and statistics
      properties:
        event:
          type: object
          properties:
            id:
              type: string
            class_id:
              type: integer
            class_name:
              type: string
            teacher_id:
              type: integer
            teacher_name:
              type: string
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            location:
              $ref: '#/components/schemas/Location'
            status:
              type: string
            qr_token:
              type: string
        attendances:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              student_id:
                type: integer
              student_name:
                type: string
              student_cpf:
                type: string
              timestamp:
                type: string
                format: date-time
              status:
                type: string
              within_radius:
                type: boolean
        absent_students:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              cpf:
                type: string
              full_name:
                type: string
        stats:
          type: object
          properties:
            total_students:
              type: integer
            total_attendances:
              type: integer
            attendance_rate:
              type: integer
              description: Percentage (0-100)
            on_time_attendances:
              type: integer
            absent_count:
              type: integer

    StudentProfile:
      type: object
      description: Aggregated student profile with classes and attendance history
      properties:
        student:
          type: object
          properties:
            id:
              type: integer
            cpf:
              type: string
            full_name:
              type: string
            device_id:
              type: string
              nullable: true
            created_at:
              type: string
              format: date-time
        enrolled_classes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
        recent_attendances:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              event_id:
                type: string
              timestamp:
                type: string
                format: date-time
              status:
                type: string
        stats:
          type: object
          properties:
            total_classes:
              type: integer
            total_attendances:
              type: integer
            attendance_rate:
              type: integer
              description: Percentage (0-100)

    EventCreateRequest:
      type: object
      required: [class_id, teacher_id, start_time, end_time, location]
      properties:
        class_id:
          type: integer
        teacher_id:
          type: integer
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/Location'

    EventUpdateRequest:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, active, closed, canceled]

    Event:
      type: object
      properties:
        id:
          type: string
        class_id:
          type: integer
        class_name:
          type: string
        teacher_id:
          type: integer
        teacher_name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/Location'
        status:
          type: string
          enum: [scheduled, active, closed, canceled]
      required: [id, class_id, teacher_id, start_time, end_time, location, status]

    EventWithQr:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          properties:
            qr_image_svg:
              type: string
            qr_token:
              type: string

    ScanRequest:
      type: object
      required: [qr_token, device_id]
      properties:
        qr_token:
          type: string
        device_id:
          type: string
          description: Device unique identifier (UUID or generated)
        student_cpf:
          type: string
          description: Optional if internal student_id resolution exists

    ScanResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string

    Attendance:
      type: object
      properties:
        id:
          type: string
        event_id:
          type: string
        student_id:
          type: integer
        student_name:
          type: string
        status:
          type: string
        timestamp:
          type: string
          format: date-time

    PagedAttendances:
      type: object
      properties:
        meta:
          type: object
          properties:
            page:
              type: integer
            size:
              type: integer
            total:
              type: integer
            links:
              type: object
              properties:
                next:
                  type: string
                prev:
                  type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Attendance'
      required: [meta, items]

    Occurrence:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        teacher_id:
          type: integer
        student_cpf:
          type: string
        class_id:
          type: integer
        description:
          type: string
        created_at:
          type: string
          format: date-time
        notified_to_institution:
          type: boolean